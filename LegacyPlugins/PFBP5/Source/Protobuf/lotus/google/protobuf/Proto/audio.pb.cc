// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: audio.proto

#include "audio.pb.h"

#include <algorithm>

#include <Protobuf/lotus/google/protobuf/stubs/common.h>
#include <Protobuf/lotus/google/protobuf/stubs/port.h>
#include <Protobuf/lotus/google/protobuf/stubs/once.h>
#include <Protobuf/lotus/google/protobuf/io/coded_stream.h>
#include <Protobuf/lotus/google/protobuf/wire_format_lite_inl.h>
#include <Protobuf/lotus/google/protobuf/descriptor.h>
#include <Protobuf/lotus/google/protobuf/generated_message_reflection.h>
#include <Protobuf/lotus/google/protobuf/reflection_ops.h>
#include <Protobuf/lotus/google/protobuf/wire_format.h>
// This is a temporary google only hack
#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
#include "third_party/protobuf/version.h"
#endif
// @@protoc_insertion_point(includes)
class visemeDefaultTypeInternal {
 public:
  ::lotus::google::protobuf::internal::ExplicitlyConstructed<viseme>
      _instance;
} _viseme_default_instance_;
class VisemeAudioDefaultTypeInternal {
 public:
  ::lotus::google::protobuf::internal::ExplicitlyConstructed<VisemeAudio>
      _instance;
} _VisemeAudio_default_instance_;
namespace protobuf_audio_2eproto {
void InitDefaultsvisemeImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::lotus::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::lotus::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  {
    void* ptr = &::_viseme_default_instance_;
    new (ptr) ::viseme();
    ::lotus::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::viseme::InitAsDefaultInstance();
}

void InitDefaultsviseme() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::lotus::google::protobuf::GoogleOnceInit(&once, &InitDefaultsvisemeImpl);
}

void InitDefaultsVisemeAudioImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

#ifdef GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  ::lotus::google::protobuf::internal::InitProtobufDefaultsForceUnique();
#else
  ::lotus::google::protobuf::internal::InitProtobufDefaults();
#endif  // GOOGLE_PROTOBUF_ENFORCE_UNIQUENESS
  protobuf_audio_2eproto::InitDefaultsviseme();
  {
    void* ptr = &::_VisemeAudio_default_instance_;
    new (ptr) ::VisemeAudio();
    ::lotus::google::protobuf::internal::OnShutdownDestroyMessage(ptr);
  }
  ::VisemeAudio::InitAsDefaultInstance();
}

void InitDefaultsVisemeAudio() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::lotus::google::protobuf::GoogleOnceInit(&once, &InitDefaultsVisemeAudioImpl);
}

::lotus::google::protobuf::Metadata file_level_metadata[2];

const ::lotus::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::viseme, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::viseme, id_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::viseme, offset_),
  ~0u,  // no _has_bits_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VisemeAudio, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VisemeAudio, json_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VisemeAudio, vlst_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(::VisemeAudio, audio_),
};
static const ::lotus::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
  { 0, -1, sizeof(::viseme)},
  { 7, -1, sizeof(::VisemeAudio)},
};

static ::lotus::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::lotus::google::protobuf::Message*>(&::_viseme_default_instance_),
  reinterpret_cast<const ::lotus::google::protobuf::Message*>(&::_VisemeAudio_default_instance_),
};

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::lotus::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "audio.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::lotus::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_PROTOBUF_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::lotus::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 2);
}

void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] GOOGLE_PROTOBUF_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
      "\n\013audio.proto\"$\n\006viseme\022\n\n\002id\030\001 \001(\005\022\016\n\006o"
      "ffset\030\002 \001(\005\"A\n\013VisemeAudio\022\014\n\004json\030\001 \001(\t"
      "\022\025\n\004vLst\030\002 \003(\0132\007.viseme\022\r\n\005audio\030\003 \001(\014b\006"
      "proto3"
  };
  ::lotus::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 126);
  ::lotus::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "audio.proto", &protobuf_RegisterTypes);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::lotus::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;
}  // namespace protobuf_audio_2eproto

// ===================================================================

void viseme::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int viseme::kIdFieldNumber;
const int viseme::kOffsetFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

viseme::viseme()
  : ::lotus::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_audio_2eproto::InitDefaultsviseme();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:viseme)
}
viseme::viseme(const viseme& from)
  : ::lotus::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::memcpy(&id_, &from.id_,
    static_cast<size_t>(reinterpret_cast<char*>(&offset_) -
    reinterpret_cast<char*>(&id_)) + sizeof(offset_));
  // @@protoc_insertion_point(copy_constructor:viseme)
}

void viseme::SharedCtor() {
  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&id_)) + sizeof(offset_));
  _cached_size_ = 0;
}

viseme::~viseme() {
  // @@protoc_insertion_point(destructor:viseme)
  SharedDtor();
}

void viseme::SharedDtor() {
}

void viseme::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::lotus::google::protobuf::Descriptor* viseme::descriptor() {
  ::protobuf_audio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_audio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const viseme& viseme::default_instance() {
  ::protobuf_audio_2eproto::InitDefaultsviseme();
  return *internal_default_instance();
}

viseme* viseme::New(::lotus::google::protobuf::Arena* arena) const {
  viseme* n = new viseme;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void viseme::Clear() {
// @@protoc_insertion_point(message_clear_start:viseme)
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  ::memset(&id_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&offset_) -
      reinterpret_cast<char*>(&id_)) + sizeof(offset_));
  _internal_metadata_.Clear();
}

bool viseme::MergePartialFromCodedStream(
    ::lotus::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::lotus::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:viseme)
  for (;;) {
    ::std::pair< ::lotus::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::lotus::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // int32 id = 1;
      case 1: {
        if (static_cast< ::lotus::google::protobuf::uint8>(tag) ==
            static_cast< ::lotus::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {

          DO_((::lotus::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::lotus::google::protobuf::int32, ::lotus::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // int32 offset = 2;
      case 2: {
        if (static_cast< ::lotus::google::protobuf::uint8>(tag) ==
            static_cast< ::lotus::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {

          DO_((::lotus::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::lotus::google::protobuf::int32, ::lotus::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &offset_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::lotus::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:viseme)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:viseme)
  return false;
#undef DO_
}

void viseme::SerializeWithCachedSizes(
    ::lotus::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:viseme)
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    ::lotus::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    ::lotus::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->offset(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::lotus::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:viseme)
}

::lotus::google::protobuf::uint8* viseme::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::lotus::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:viseme)
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // int32 id = 1;
  if (this->id() != 0) {
    target = ::lotus::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    target = ::lotus::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->offset(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::lotus::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:viseme)
  return target;
}

size_t viseme::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:viseme)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::lotus::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // int32 id = 1;
  if (this->id() != 0) {
    total_size += 1 +
      ::lotus::google::protobuf::internal::WireFormatLite::Int32Size(
        this->id());
  }

  // int32 offset = 2;
  if (this->offset() != 0) {
    total_size += 1 +
      ::lotus::google::protobuf::internal::WireFormatLite::Int32Size(
        this->offset());
  }

  int cached_size = ::lotus::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void viseme::MergeFrom(const ::lotus::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:viseme)
  GOOGLE_DCHECK_NE(&from, this);
  const viseme* source =
      ::lotus::google::protobuf::internal::DynamicCastToGenerated<const viseme>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:viseme)
    ::lotus::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:viseme)
    MergeFrom(*source);
  }
}

void viseme::MergeFrom(const viseme& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:viseme)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  if (from.id() != 0) {
    set_id(from.id());
  }
  if (from.offset() != 0) {
    set_offset(from.offset());
  }
}

void viseme::CopyFrom(const ::lotus::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:viseme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void viseme::CopyFrom(const viseme& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:viseme)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool viseme::IsInitialized() const {
  return true;
}

void viseme::Swap(viseme* other) {
  if (other == this) return;
  InternalSwap(other);
}
void viseme::InternalSwap(viseme* other) {
  using std::swap;
  swap(id_, other->id_);
  swap(offset_, other->offset_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::lotus::google::protobuf::Metadata viseme::GetMetadata() const {
  protobuf_audio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_audio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// ===================================================================

void VisemeAudio::InitAsDefaultInstance() {
}
#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int VisemeAudio::kJsonFieldNumber;
const int VisemeAudio::kVLstFieldNumber;
const int VisemeAudio::kAudioFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

VisemeAudio::VisemeAudio()
  : ::lotus::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    ::protobuf_audio_2eproto::InitDefaultsVisemeAudio();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:VisemeAudio)
}
VisemeAudio::VisemeAudio(const VisemeAudio& from)
  : ::lotus::google::protobuf::Message(),
      _internal_metadata_(NULL),
      vlst_(from.vlst_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  json_.UnsafeSetDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.json().size() > 0) {
    json_.AssignWithDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  audio_.UnsafeSetDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.audio().size() > 0) {
    audio_.AssignWithDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_);
  }
  // @@protoc_insertion_point(copy_constructor:VisemeAudio)
}

void VisemeAudio::SharedCtor() {
  json_.UnsafeSetDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_.UnsafeSetDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _cached_size_ = 0;
}

VisemeAudio::~VisemeAudio() {
  // @@protoc_insertion_point(destructor:VisemeAudio)
  SharedDtor();
}

void VisemeAudio::SharedDtor() {
  json_.DestroyNoArena(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_.DestroyNoArena(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void VisemeAudio::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::lotus::google::protobuf::Descriptor* VisemeAudio::descriptor() {
  ::protobuf_audio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_audio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const VisemeAudio& VisemeAudio::default_instance() {
  ::protobuf_audio_2eproto::InitDefaultsVisemeAudio();
  return *internal_default_instance();
}

VisemeAudio* VisemeAudio::New(::lotus::google::protobuf::Arena* arena) const {
  VisemeAudio* n = new VisemeAudio;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void VisemeAudio::Clear() {
// @@protoc_insertion_point(message_clear_start:VisemeAudio)
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  vlst_.Clear();
  json_.ClearToEmptyNoArena(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
  audio_.ClearToEmptyNoArena(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited());
  _internal_metadata_.Clear();
}

bool VisemeAudio::MergePartialFromCodedStream(
    ::lotus::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::lotus::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:VisemeAudio)
  for (;;) {
    ::std::pair< ::lotus::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::lotus::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // string json = 1;
      case 1: {
        if (static_cast< ::lotus::google::protobuf::uint8>(tag) ==
            static_cast< ::lotus::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
          DO_(::lotus::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_json()));
          DO_(::lotus::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->json().data(), static_cast<int>(this->json().length()),
            ::lotus::google::protobuf::internal::WireFormatLite::PARSE,
            "VisemeAudio.json"));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .viseme vLst = 2;
      case 2: {
        if (static_cast< ::lotus::google::protobuf::uint8>(tag) ==
            static_cast< ::lotus::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
          DO_(::lotus::google::protobuf::internal::WireFormatLite::ReadMessage(input, add_vlst()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // bytes audio = 3;
      case 3: {
        if (static_cast< ::lotus::google::protobuf::uint8>(tag) ==
            static_cast< ::lotus::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
          DO_(::lotus::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_audio()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0) {
          goto success;
        }
        DO_(::lotus::google::protobuf::internal::WireFormat::SkipField(
              input, tag, _internal_metadata_.mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:VisemeAudio)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:VisemeAudio)
  return false;
#undef DO_
}

void VisemeAudio::SerializeWithCachedSizes(
    ::lotus::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:VisemeAudio)
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::lotus::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::lotus::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VisemeAudio.json");
    ::lotus::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->json(), output);
  }

  // repeated .viseme vLst = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlst_size()); i < n; i++) {
    ::lotus::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->vlst(static_cast<int>(i)), output);
  }

  // bytes audio = 3;
  if (this->audio().size() > 0) {
    ::lotus::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(
      3, this->audio(), output);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    ::lotus::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        (::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), output);
  }
  // @@protoc_insertion_point(serialize_end:VisemeAudio)
}

::lotus::google::protobuf::uint8* VisemeAudio::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::lotus::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:VisemeAudio)
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // string json = 1;
  if (this->json().size() > 0) {
    ::lotus::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
      this->json().data(), static_cast<int>(this->json().length()),
      ::lotus::google::protobuf::internal::WireFormatLite::SERIALIZE,
      "VisemeAudio.json");
    target =
      ::lotus::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->json(), target);
  }

  // repeated .viseme vLst = 2;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->vlst_size()); i < n; i++) {
    target = ::lotus::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageToArray(
        2, this->vlst(static_cast<int>(i)), deterministic, target);
  }

  // bytes audio = 3;
  if (this->audio().size() > 0) {
    target =
      ::lotus::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        3, this->audio(), target);
  }

  if ((_internal_metadata_.have_unknown_fields() &&  ::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    target = ::lotus::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        (::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:VisemeAudio)
  return target;
}

size_t VisemeAudio::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:VisemeAudio)
  size_t total_size = 0;

  if ((_internal_metadata_.have_unknown_fields() &&  ::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
    total_size +=
      ::lotus::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        (::lotus::google::protobuf::internal::GetProto3PreserveUnknownsDefault()   ? _internal_metadata_.unknown_fields()   : _internal_metadata_.default_instance()));
  }
  // repeated .viseme vLst = 2;
  {
    unsigned int count = static_cast<unsigned int>(this->vlst_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::lotus::google::protobuf::internal::WireFormatLite::MessageSize(
          this->vlst(static_cast<int>(i)));
    }
  }

  // string json = 1;
  if (this->json().size() > 0) {
    total_size += 1 +
      ::lotus::google::protobuf::internal::WireFormatLite::StringSize(
        this->json());
  }

  // bytes audio = 3;
  if (this->audio().size() > 0) {
    total_size += 1 +
      ::lotus::google::protobuf::internal::WireFormatLite::BytesSize(
        this->audio());
  }

  int cached_size = ::lotus::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void VisemeAudio::MergeFrom(const ::lotus::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:VisemeAudio)
  GOOGLE_DCHECK_NE(&from, this);
  const VisemeAudio* source =
      ::lotus::google::protobuf::internal::DynamicCastToGenerated<const VisemeAudio>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:VisemeAudio)
    ::lotus::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:VisemeAudio)
    MergeFrom(*source);
  }
}

void VisemeAudio::MergeFrom(const VisemeAudio& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:VisemeAudio)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::lotus::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  vlst_.MergeFrom(from.vlst_);
  if (from.json().size() > 0) {

    json_.AssignWithDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.json_);
  }
  if (from.audio().size() > 0) {

    audio_.AssignWithDefault(&::lotus::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.audio_);
  }
}

void VisemeAudio::CopyFrom(const ::lotus::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:VisemeAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void VisemeAudio::CopyFrom(const VisemeAudio& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:VisemeAudio)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool VisemeAudio::IsInitialized() const {
  return true;
}

void VisemeAudio::Swap(VisemeAudio* other) {
  if (other == this) return;
  InternalSwap(other);
}
void VisemeAudio::InternalSwap(VisemeAudio* other) {
  using std::swap;
  vlst_.InternalSwap(&other->vlst_);
  json_.Swap(&other->json_);
  audio_.Swap(&other->audio_);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  swap(_cached_size_, other->_cached_size_);
}

::lotus::google::protobuf::Metadata VisemeAudio::GetMetadata() const {
  protobuf_audio_2eproto::protobuf_AssignDescriptorsOnce();
  return ::protobuf_audio_2eproto::file_level_metadata[kIndexInFileMessages];
}


// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
